State 28 conflicts: 8 shift/reduce
State 43 conflicts: 2 reduce/reduce
State 45 conflicts: 1 shift/reduce
State 93 conflicts: 2 reduce/reduce
State 95 conflicts: 1 shift/reduce
State 108 conflicts: 2 shift/reduce
State 118 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: startsymb "end of file"

    1 startsymb: program

    2 program: ε
    3        | top ";" program

    4 top: ε
    5    | definition
    6    | external
    7    | "global" "id"
    8    | "global" "id" "[" "integer" "]"

    9 definition: "def" proto exp

   10 external: "extern" proto

   11 proto: "id" "(" idseq ")"

   12 idseq: ε
   13      | "id" idseq

   14 stmt: binding
   15     | "id" "=" exp
   16     | exp
   17     | ifstmt

   18 ifstmt: "if" "(" exp ")" exp
   19       | "if" "(" exp ")" exp "else" exp

   20 stmtlist: ε
   21         | stmt
   22         | stmtlist ";" stmt

   23 exp: "id" "=" exp
   24    | "id" "[" exp "]" "=" exp
   25    | simple_exp
   26    | expif

   27 simple_exp: "not" simple_exp
   28           | "-" simple_exp
   29           | "++" simple_exp
   30           | simple_exp "+" simple_exp
   31           | simple_exp "-" simple_exp
   32           | simple_exp "*" simple_exp
   33           | simple_exp "/" simple_exp
   34           | simple_exp "<" simple_exp
   35           | simple_exp "==" simple_exp
   36           | simple_exp "and" simple_exp
   37           | simple_exp "or" simple_exp
   38           | idexp
   39           | "(" exp ")"
   40           | "number"
   41           | "integer"
   42           | blockexp
   43           | forexpr
   44           | ifstmt

   45 blockexp: "{" stmtlist ";" exp "}"
   46         | "{" exp "}"
   47         | "{" stmtlist "}"

   48 forexpr: "for" "(" binding ";" exp ";" exp ")" exp
   49        | "for" "(" exp ";" exp ";" exp ")" exp

   50 binding: "var" "id" "=" exp

   51 expif: exp "?" exp ":" exp

   52 idexp: "id"
   53      | "id" "(" optexp ")"
   54      | "id" "[" exp "]"

   55 optexp: ε
   56       | explist

   57 explist: exp
   58        | exp "," explist


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    ";" (258) 3 22 45 48 49
    "," (259) 58
    "-" (260) 28 31
    "+" (261) 30
    "*" (262) 32
    "/" (263) 33
    "(" (264) 11 18 19 39 48 49 53
    ")" (265) 11 18 19 39 48 49 53
    "?" (266) 51
    ":" (267) 51
    "<" (268) 34
    "==" (269) 35
    "=" (270) 15 23 24 50
    "{" (271) 45 46 47
    "}" (272) 45 46 47
    "extern" (273) 10
    "def" (274) 9
    "var" (275) 50
    "global" (276) 7 8
    "for" (277) 48 49
    "++" (278) 29
    "if" (279) 18 19
    "else" (280) 19
    "or" (281) 37
    "and" (282) 36
    "not" (283) 27
    "[" (284) 8 24 54
    "]" (285) 8 24 54
    "id" <std::string> (286) 7 8 11 13 15 23 24 50 52 53 54
    "number" <double> (287) 40
    "integer" <long long> (288) 8 41
    UMINUS (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    startsymb (36)
        on left: 1
        on right: 0
    program <RootAST*> (37)
        on left: 2 3
        on right: 1 3
    top <RootAST*> (38)
        on left: 4 5 6 7 8
        on right: 3
    definition <FunctionAST*> (39)
        on left: 9
        on right: 5
    external <PrototypeAST*> (40)
        on left: 10
        on right: 6
    proto <PrototypeAST*> (41)
        on left: 11
        on right: 9 10
    idseq <std::vector<std::string>> (42)
        on left: 12 13
        on right: 11 13
    stmt <RootAST*> (43)
        on left: 14 15 16 17
        on right: 21 22
    ifstmt <ExprAST*> (44)
        on left: 18 19
        on right: 17 44
    stmtlist <std::vector<RootAST*>> (45)
        on left: 20 21 22
        on right: 22 45 47
    exp <ExprAST*> (46)
        on left: 23 24 25 26
        on right: 9 15 16 18 19 23 24 39 45 46 48 49 50 51 54 57 58
    simple_exp <ExprAST*> (47)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 25 27 28 29 30 31 32 33 34 35 36 37
    blockexp <ExprAST*> (48)
        on left: 45 46 47
        on right: 42
    forexpr <ExprAST*> (49)
        on left: 48 49
        on right: 43
    binding <VarBindingAST*> (50)
        on left: 50
        on right: 14 48
    expif <ExprAST*> (51)
        on left: 51
        on right: 26
    idexp <ExprAST*> (52)
        on left: 52 53 54
        on right: 38
    optexp <std::vector<ExprAST*>> (53)
        on left: 55 56
        on right: 53
    explist <std::vector<ExprAST*>> (54)
        on left: 57 58
        on right: 56 58


State 0

    0 $accept: • startsymb "end of file"

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2
    "global"  shift, and go to state 3

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    startsymb   go to state 4
    program     go to state 5
    top         go to state 6
    definition  go to state 7
    external    go to state 8


State 1

   10 external: "extern" • proto

    "id"  shift, and go to state 9

    proto  go to state 10


State 2

    9 definition: "def" • proto exp

    "id"  shift, and go to state 9

    proto  go to state 11


State 3

    7 top: "global" • "id"
    8    | "global" • "id" "[" "integer" "]"

    "id"  shift, and go to state 12


State 4

    0 $accept: startsymb • "end of file"

    "end of file"  shift, and go to state 13


State 5

    1 startsymb: program •

    $default  reduce using rule 1 (startsymb)


State 6

    3 program: top • ";" program

    ";"  shift, and go to state 14


State 7

    5 top: definition •

    $default  reduce using rule 5 (top)


State 8

    6 top: external •

    $default  reduce using rule 6 (top)


State 9

   11 proto: "id" • "(" idseq ")"

    "("  shift, and go to state 15


State 10

   10 external: "extern" proto •

    $default  reduce using rule 10 (external)


State 11

    9 definition: "def" proto • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 27
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 12

    7 top: "global" "id" •
    8    | "global" "id" • "[" "integer" "]"

    "["  shift, and go to state 33

    $default  reduce using rule 7 (top)


State 13

    0 $accept: startsymb "end of file" •

    $default  accept


State 14

    3 program: top ";" • program

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2
    "global"  shift, and go to state 3

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    program     go to state 34
    top         go to state 6
    definition  go to state 7
    external    go to state 8


State 15

   11 proto: "id" "(" • idseq ")"

    "id"  shift, and go to state 35

    $default  reduce using rule 12 (idseq)

    idseq  go to state 36


State 16

   28 simple_exp: "-" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 38
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 17

   39 simple_exp: "(" • exp ")"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 39
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 18

   45 blockexp: "{" • stmtlist ";" exp "}"
   46         | "{" • exp "}"
   47         | "{" • stmtlist "}"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 41
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    $default  reduce using rule 20 (stmtlist)

    stmt        go to state 42
    ifstmt      go to state 43
    stmtlist    go to state 44
    exp         go to state 45
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 46
    expif       go to state 31
    idexp       go to state 32


State 19

   48 forexpr: "for" • "(" binding ";" exp ";" exp ")" exp
   49        | "for" • "(" exp ";" exp ";" exp ")" exp

    "("  shift, and go to state 47


State 20

   29 simple_exp: "++" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 48
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 21

   18 ifstmt: "if" • "(" exp ")" exp
   19       | "if" • "(" exp ")" exp "else" exp

    "("  shift, and go to state 49


State 22

   27 simple_exp: "not" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 50
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 23

   23 exp: "id" • "=" exp
   24    | "id" • "[" exp "]" "=" exp
   52 idexp: "id" •
   53      | "id" • "(" optexp ")"
   54      | "id" • "[" exp "]"

    "("  shift, and go to state 51
    "="  shift, and go to state 52
    "["  shift, and go to state 53

    $default  reduce using rule 52 (idexp)


State 24

   40 simple_exp: "number" •

    $default  reduce using rule 40 (simple_exp)


State 25

   41 simple_exp: "integer" •

    $default  reduce using rule 41 (simple_exp)


State 26

   44 simple_exp: ifstmt •

    $default  reduce using rule 44 (simple_exp)


State 27

    9 definition: "def" proto exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    $default  reduce using rule 9 (definition)


State 28

   25 exp: simple_exp •
   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"    shift, and go to state 55
    "+"    shift, and go to state 56
    "*"    shift, and go to state 57
    "/"    shift, and go to state 58
    "<"    shift, and go to state 59
    "=="   shift, and go to state 60
    "or"   shift, and go to state 61
    "and"  shift, and go to state 62

    "-"       [reduce using rule 25 (exp)]
    "+"       [reduce using rule 25 (exp)]
    "*"       [reduce using rule 25 (exp)]
    "/"       [reduce using rule 25 (exp)]
    "<"       [reduce using rule 25 (exp)]
    "=="      [reduce using rule 25 (exp)]
    "or"      [reduce using rule 25 (exp)]
    "and"     [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 29

   42 simple_exp: blockexp •

    $default  reduce using rule 42 (simple_exp)


State 30

   43 simple_exp: forexpr •

    $default  reduce using rule 43 (simple_exp)


State 31

   26 exp: expif •

    $default  reduce using rule 26 (exp)


State 32

   38 simple_exp: idexp •

    $default  reduce using rule 38 (simple_exp)


State 33

    8 top: "global" "id" "[" • "integer" "]"

    "integer"  shift, and go to state 63


State 34

    3 program: top ";" program •

    $default  reduce using rule 3 (program)


State 35

   13 idseq: "id" • idseq

    "id"  shift, and go to state 35

    $default  reduce using rule 12 (idseq)

    idseq  go to state 64


State 36

   11 proto: "id" "(" idseq • ")"

    ")"  shift, and go to state 65


State 37

   52 idexp: "id" •
   53      | "id" • "(" optexp ")"
   54      | "id" • "[" exp "]"

    "("  shift, and go to state 51
    "["  shift, and go to state 66

    $default  reduce using rule 52 (idexp)


State 38

   28 simple_exp: "-" simple_exp •
   30           | simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 55
    "+"   shift, and go to state 56
    "*"   shift, and go to state 57
    "/"   shift, and go to state 58
    "<"   shift, and go to state 59
    "=="  shift, and go to state 60

    $default  reduce using rule 28 (simple_exp)


State 39

   39 simple_exp: "(" exp • ")"
   51 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 67
    "?"  shift, and go to state 54


State 40

   50 binding: "var" • "id" "=" exp

    "id"  shift, and go to state 68


State 41

   15 stmt: "id" • "=" exp
   23 exp: "id" • "=" exp
   24    | "id" • "[" exp "]" "=" exp
   52 idexp: "id" •
   53      | "id" • "(" optexp ")"
   54      | "id" • "[" exp "]"

    "("  shift, and go to state 51
    "="  shift, and go to state 69
    "["  shift, and go to state 53

    $default  reduce using rule 52 (idexp)


State 42

   21 stmtlist: stmt •

    $default  reduce using rule 21 (stmtlist)


State 43

   17 stmt: ifstmt •
   44 simple_exp: ifstmt •

    ";"       reduce using rule 17 (stmt)
    ";"       [reduce using rule 44 (simple_exp)]
    "}"       reduce using rule 17 (stmt)
    "}"       [reduce using rule 44 (simple_exp)]
    $default  reduce using rule 44 (simple_exp)


State 44

   22 stmtlist: stmtlist • ";" stmt
   45 blockexp: "{" stmtlist • ";" exp "}"
   47         | "{" stmtlist • "}"

    ";"  shift, and go to state 70
    "}"  shift, and go to state 71


State 45

   16 stmt: exp •
   46 blockexp: "{" exp • "}"
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54
    "}"  shift, and go to state 72

    "}"       [reduce using rule 16 (stmt)]
    $default  reduce using rule 16 (stmt)


State 46

   14 stmt: binding •

    $default  reduce using rule 14 (stmt)


State 47

   48 forexpr: "for" "(" • binding ";" exp ";" exp ")" exp
   49        | "for" "(" • exp ";" exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 73
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 74
    expif       go to state 31
    idexp       go to state 32


State 48

   29 simple_exp: "++" simple_exp •
   30           | simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 55
    "+"   shift, and go to state 56
    "*"   shift, and go to state 57
    "/"   shift, and go to state 58
    "<"   shift, and go to state 59
    "=="  shift, and go to state 60

    $default  reduce using rule 29 (simple_exp)


State 49

   18 ifstmt: "if" "(" • exp ")" exp
   19       | "if" "(" • exp ")" exp "else" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 75
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 50

   27 simple_exp: "not" simple_exp •
   30           | simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 55
    "+"   shift, and go to state 56
    "*"   shift, and go to state 57
    "/"   shift, and go to state 58
    "<"   shift, and go to state 59
    "=="  shift, and go to state 60

    $default  reduce using rule 27 (simple_exp)


State 51

   53 idexp: "id" "(" • optexp ")"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    $default  reduce using rule 55 (optexp)

    ifstmt      go to state 26
    exp         go to state 76
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32
    optexp      go to state 77
    explist     go to state 78


State 52

   23 exp: "id" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 79
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 53

   24 exp: "id" "[" • exp "]" "=" exp
   54 idexp: "id" "[" • exp "]"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 80
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 54

   51 expif: exp "?" • exp ":" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 81
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 55

   31 simple_exp: simple_exp "-" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 82
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 56

   30 simple_exp: simple_exp "+" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 83
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 57

   32 simple_exp: simple_exp "*" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 84
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 58

   33 simple_exp: simple_exp "/" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 85
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 59

   34 simple_exp: simple_exp "<" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 86
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 60

   35 simple_exp: simple_exp "==" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 87
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 61

   37 simple_exp: simple_exp "or" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 88
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 62

   36 simple_exp: simple_exp "and" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 89
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 63

    8 top: "global" "id" "[" "integer" • "]"

    "]"  shift, and go to state 90


State 64

   13 idseq: "id" idseq •

    $default  reduce using rule 13 (idseq)


State 65

   11 proto: "id" "(" idseq ")" •

    $default  reduce using rule 11 (proto)


State 66

   54 idexp: "id" "[" • exp "]"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 91
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 67

   39 simple_exp: "(" exp ")" •

    $default  reduce using rule 39 (simple_exp)


State 68

   50 binding: "var" "id" • "=" exp

    "="  shift, and go to state 92


State 69

   15 stmt: "id" "=" • exp
   23 exp: "id" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 93
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 70

   22 stmtlist: stmtlist ";" • stmt
   45 blockexp: "{" stmtlist ";" • exp "}"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 41
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    stmt        go to state 94
    ifstmt      go to state 43
    exp         go to state 95
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 46
    expif       go to state 31
    idexp       go to state 32


State 71

   47 blockexp: "{" stmtlist "}" •

    $default  reduce using rule 47 (blockexp)


State 72

   46 blockexp: "{" exp "}" •

    $default  reduce using rule 46 (blockexp)


State 73

   49 forexpr: "for" "(" exp • ";" exp ";" exp ")" exp
   51 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 96
    "?"  shift, and go to state 54


State 74

   48 forexpr: "for" "(" binding • ";" exp ";" exp ")" exp

    ";"  shift, and go to state 97


State 75

   18 ifstmt: "if" "(" exp • ")" exp
   19       | "if" "(" exp • ")" exp "else" exp
   51 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 98
    "?"  shift, and go to state 54


State 76

   51 expif: exp • "?" exp ":" exp
   57 explist: exp •
   58        | exp • "," explist

    ","  shift, and go to state 99
    "?"  shift, and go to state 54

    $default  reduce using rule 57 (explist)


State 77

   53 idexp: "id" "(" optexp • ")"

    ")"  shift, and go to state 100


State 78

   56 optexp: explist •

    $default  reduce using rule 56 (optexp)


State 79

   23 exp: "id" "=" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    $default  reduce using rule 23 (exp)


State 80

   24 exp: "id" "[" exp • "]" "=" exp
   51 expif: exp • "?" exp ":" exp
   54 idexp: "id" "[" exp • "]"

    "?"  shift, and go to state 54
    "]"  shift, and go to state 101


State 81

   51 expif: exp • "?" exp ":" exp
   51      | exp "?" exp • ":" exp

    "?"  shift, and go to state 54
    ":"  shift, and go to state 102


State 82

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   31           | simple_exp "-" simple_exp •
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "*"  shift, and go to state 57
    "/"  shift, and go to state 58

    $default  reduce using rule 31 (simple_exp)


State 83

   30 simple_exp: simple_exp • "+" simple_exp
   30           | simple_exp "+" simple_exp •
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "*"  shift, and go to state 57
    "/"  shift, and go to state 58

    $default  reduce using rule 30 (simple_exp)


State 84

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   32           | simple_exp "*" simple_exp •
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    $default  reduce using rule 32 (simple_exp)


State 85

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   33           | simple_exp "/" simple_exp •
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    $default  reduce using rule 33 (simple_exp)


State 86

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   34           | simple_exp "<" simple_exp •
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"  shift, and go to state 55
    "+"  shift, and go to state 56
    "*"  shift, and go to state 57
    "/"  shift, and go to state 58

    $default  reduce using rule 34 (simple_exp)


State 87

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   35           | simple_exp "==" simple_exp •
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp

    "-"  shift, and go to state 55
    "+"  shift, and go to state 56
    "*"  shift, and go to state 57
    "/"  shift, and go to state 58

    $default  reduce using rule 35 (simple_exp)


State 88

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   37           | simple_exp • "or" simple_exp
   37           | simple_exp "or" simple_exp •

    "-"    shift, and go to state 55
    "+"    shift, and go to state 56
    "*"    shift, and go to state 57
    "/"    shift, and go to state 58
    "<"    shift, and go to state 59
    "=="   shift, and go to state 60
    "and"  shift, and go to state 62

    $default  reduce using rule 37 (simple_exp)


State 89

   30 simple_exp: simple_exp • "+" simple_exp
   31           | simple_exp • "-" simple_exp
   32           | simple_exp • "*" simple_exp
   33           | simple_exp • "/" simple_exp
   34           | simple_exp • "<" simple_exp
   35           | simple_exp • "==" simple_exp
   36           | simple_exp • "and" simple_exp
   36           | simple_exp "and" simple_exp •
   37           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 55
    "+"   shift, and go to state 56
    "*"   shift, and go to state 57
    "/"   shift, and go to state 58
    "<"   shift, and go to state 59
    "=="  shift, and go to state 60

    $default  reduce using rule 36 (simple_exp)


State 90

    8 top: "global" "id" "[" "integer" "]" •

    $default  reduce using rule 8 (top)


State 91

   51 expif: exp • "?" exp ":" exp
   54 idexp: "id" "[" exp • "]"

    "?"  shift, and go to state 54
    "]"  shift, and go to state 103


State 92

   50 binding: "var" "id" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 104
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 93

   15 stmt: "id" "=" exp •
   23 exp: "id" "=" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    ";"       reduce using rule 15 (stmt)
    ";"       [reduce using rule 23 (exp)]
    "}"       reduce using rule 15 (stmt)
    "}"       [reduce using rule 23 (exp)]
    $default  reduce using rule 15 (stmt)


State 94

   22 stmtlist: stmtlist ";" stmt •

    $default  reduce using rule 22 (stmtlist)


State 95

   16 stmt: exp •
   45 blockexp: "{" stmtlist ";" exp • "}"
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54
    "}"  shift, and go to state 105

    "}"       [reduce using rule 16 (stmt)]
    $default  reduce using rule 16 (stmt)


State 96

   49 forexpr: "for" "(" exp ";" • exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 106
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 97

   48 forexpr: "for" "(" binding ";" • exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 107
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 98

   18 ifstmt: "if" "(" exp ")" • exp
   19       | "if" "(" exp ")" • exp "else" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 108
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 99

   58 explist: exp "," • explist

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 76
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32
    explist     go to state 109


State 100

   53 idexp: "id" "(" optexp ")" •

    $default  reduce using rule 53 (idexp)


State 101

   24 exp: "id" "[" exp "]" • "=" exp
   54 idexp: "id" "[" exp "]" •

    "="  shift, and go to state 110

    $default  reduce using rule 54 (idexp)


State 102

   51 expif: exp "?" exp ":" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 111
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 103

   54 idexp: "id" "[" exp "]" •

    $default  reduce using rule 54 (idexp)


State 104

   50 binding: "var" "id" "=" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    $default  reduce using rule 50 (binding)


State 105

   45 blockexp: "{" stmtlist ";" exp "}" •

    $default  reduce using rule 45 (blockexp)


State 106

   49 forexpr: "for" "(" exp ";" exp • ";" exp ")" exp
   51 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 112
    "?"  shift, and go to state 54


State 107

   48 forexpr: "for" "(" binding ";" exp • ";" exp ")" exp
   51 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 113
    "?"  shift, and go to state 54


State 108

   18 ifstmt: "if" "(" exp ")" exp •
   19       | "if" "(" exp ")" exp • "else" exp
   51 expif: exp • "?" exp ":" exp

    "?"     shift, and go to state 54
    "else"  shift, and go to state 114

    "?"       [reduce using rule 18 (ifstmt)]
    "else"    [reduce using rule 18 (ifstmt)]
    $default  reduce using rule 18 (ifstmt)


State 109

   58 explist: exp "," explist •

    $default  reduce using rule 58 (explist)


State 110

   24 exp: "id" "[" exp "]" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 115
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 111

   51 expif: exp • "?" exp ":" exp
   51      | exp "?" exp ":" exp •

    $default  reduce using rule 51 (expif)


State 112

   49 forexpr: "for" "(" exp ";" exp ";" • exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 116
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 113

   48 forexpr: "for" "(" binding ";" exp ";" • exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 117
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 114

   19 ifstmt: "if" "(" exp ")" exp "else" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 118
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 115

   24 exp: "id" "[" exp "]" "=" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    $default  reduce using rule 24 (exp)


State 116

   49 forexpr: "for" "(" exp ";" exp ";" exp • ")" exp
   51 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 119
    "?"  shift, and go to state 54


State 117

   48 forexpr: "for" "(" binding ";" exp ";" exp • ")" exp
   51 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 120
    "?"  shift, and go to state 54


State 118

   19 ifstmt: "if" "(" exp ")" exp "else" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    "?"       [reduce using rule 19 (ifstmt)]
    $default  reduce using rule 19 (ifstmt)


State 119

   49 forexpr: "for" "(" exp ";" exp ";" exp ")" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 121
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 120

   48 forexpr: "for" "(" binding ";" exp ";" exp ")" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 122
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 121

   49 forexpr: "for" "(" exp ";" exp ";" exp ")" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    "?"       [reduce using rule 49 (forexpr)]
    $default  reduce using rule 49 (forexpr)


State 122

   48 forexpr: "for" "(" binding ";" exp ";" exp ")" exp •
   51 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 54

    "?"       [reduce using rule 48 (forexpr)]
    $default  reduce using rule 48 (forexpr)
