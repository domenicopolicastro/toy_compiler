State 28 conflicts: 8 shift/reduce
State 43 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 104 conflicts: 2 shift/reduce
State 114 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: startsymb "end of file"

    1 startsymb: program

    2 program: ε
    3        | top ";" program

    4 top: ε
    5    | definition
    6    | external
    7    | "global" "id"
    8    | "global" "id" "[" "integer" "]"

    9 definition: "def" proto exp

   10 external: "extern" proto

   11 proto: "id" "(" idseq ")"

   12 idseq: ε
   13      | "id" idseq

   14 stmt: binding
   15     | exp

   16 ifstmt: "if" "(" exp ")" exp
   17       | "if" "(" exp ")" exp "else" exp

   18 stmtlist: ε
   19         | stmt
   20         | stmtlist ";" stmt

   21 exp: "id" "=" exp
   22    | "id" "[" exp "]" "=" exp
   23    | simple_exp
   24    | expif

   25 simple_exp: "not" simple_exp
   26           | "-" simple_exp
   27           | "++" simple_exp
   28           | simple_exp "+" simple_exp
   29           | simple_exp "-" simple_exp
   30           | simple_exp "*" simple_exp
   31           | simple_exp "/" simple_exp
   32           | simple_exp "<" simple_exp
   33           | simple_exp "==" simple_exp
   34           | simple_exp "and" simple_exp
   35           | simple_exp "or" simple_exp
   36           | idexp
   37           | "(" exp ")"
   38           | "number"
   39           | "integer"
   40           | blockexp
   41           | forexpr
   42           | ifstmt

   43 blockexp: "{" stmtlist ";" exp "}"
   44         | "{" exp "}"
   45         | "{" stmtlist "}"

   46 forexpr: "for" "(" binding ";" exp ";" exp ")" exp
   47        | "for" "(" exp ";" exp ";" exp ")" exp

   48 binding: "var" "id" "=" exp

   49 expif: exp "?" exp ":" exp

   50 idexp: "id"
   51      | "id" "(" optexp ")"
   52      | "id" "[" exp "]"

   53 optexp: ε
   54       | explist

   55 explist: exp
   56        | exp "," explist


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    ";" (258) 3 20 43 46 47
    "," (259) 56
    "-" (260) 26 29
    "+" (261) 28
    "*" (262) 30
    "/" (263) 31
    "(" (264) 11 16 17 37 46 47 51
    ")" (265) 11 16 17 37 46 47 51
    "?" (266) 49
    ":" (267) 49
    "<" (268) 32
    "==" (269) 33
    "=" (270) 21 22 48
    "{" (271) 43 44 45
    "}" (272) 43 44 45
    "extern" (273) 10
    "def" (274) 9
    "var" (275) 48
    "global" (276) 7 8
    "for" (277) 46 47
    "++" (278) 27
    "if" (279) 16 17
    "else" (280) 17
    "or" (281) 35
    "and" (282) 34
    "not" (283) 25
    "[" (284) 8 22 52
    "]" (285) 8 22 52
    "id" <std::string> (286) 7 8 11 13 21 22 48 50 51 52
    "number" <double> (287) 38
    "integer" <long long> (288) 8 39
    UMINUS (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    startsymb (36)
        on left: 1
        on right: 0
    program <RootAST*> (37)
        on left: 2 3
        on right: 1 3
    top <RootAST*> (38)
        on left: 4 5 6 7 8
        on right: 3
    definition <FunctionAST*> (39)
        on left: 9
        on right: 5
    external <PrototypeAST*> (40)
        on left: 10
        on right: 6
    proto <PrototypeAST*> (41)
        on left: 11
        on right: 9 10
    idseq <std::vector<std::string>> (42)
        on left: 12 13
        on right: 11 13
    stmt <RootAST*> (43)
        on left: 14 15
        on right: 19 20
    ifstmt <ExprAST*> (44)
        on left: 16 17
        on right: 42
    stmtlist <std::vector<RootAST*>> (45)
        on left: 18 19 20
        on right: 20 43 45
    exp <ExprAST*> (46)
        on left: 21 22 23 24
        on right: 9 15 16 17 21 22 37 43 44 46 47 48 49 52 55 56
    simple_exp <ExprAST*> (47)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 23 25 26 27 28 29 30 31 32 33 34 35
    blockexp <ExprAST*> (48)
        on left: 43 44 45
        on right: 40
    forexpr <ExprAST*> (49)
        on left: 46 47
        on right: 41
    binding <VarBindingAST*> (50)
        on left: 48
        on right: 14 46
    expif <ExprAST*> (51)
        on left: 49
        on right: 24
    idexp <ExprAST*> (52)
        on left: 50 51 52
        on right: 36
    optexp <std::vector<ExprAST*>> (53)
        on left: 53 54
        on right: 51
    explist <std::vector<ExprAST*>> (54)
        on left: 55 56
        on right: 54 56


State 0

    0 $accept: • startsymb "end of file"

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2
    "global"  shift, and go to state 3

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    startsymb   go to state 4
    program     go to state 5
    top         go to state 6
    definition  go to state 7
    external    go to state 8


State 1

   10 external: "extern" • proto

    "id"  shift, and go to state 9

    proto  go to state 10


State 2

    9 definition: "def" • proto exp

    "id"  shift, and go to state 9

    proto  go to state 11


State 3

    7 top: "global" • "id"
    8    | "global" • "id" "[" "integer" "]"

    "id"  shift, and go to state 12


State 4

    0 $accept: startsymb • "end of file"

    "end of file"  shift, and go to state 13


State 5

    1 startsymb: program •

    $default  reduce using rule 1 (startsymb)


State 6

    3 program: top • ";" program

    ";"  shift, and go to state 14


State 7

    5 top: definition •

    $default  reduce using rule 5 (top)


State 8

    6 top: external •

    $default  reduce using rule 6 (top)


State 9

   11 proto: "id" • "(" idseq ")"

    "("  shift, and go to state 15


State 10

   10 external: "extern" proto •

    $default  reduce using rule 10 (external)


State 11

    9 definition: "def" proto • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 27
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 12

    7 top: "global" "id" •
    8    | "global" "id" • "[" "integer" "]"

    "["  shift, and go to state 33

    $default  reduce using rule 7 (top)


State 13

    0 $accept: startsymb "end of file" •

    $default  accept


State 14

    3 program: top ";" • program

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2
    "global"  shift, and go to state 3

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    program     go to state 34
    top         go to state 6
    definition  go to state 7
    external    go to state 8


State 15

   11 proto: "id" "(" • idseq ")"

    "id"  shift, and go to state 35

    $default  reduce using rule 12 (idseq)

    idseq  go to state 36


State 16

   26 simple_exp: "-" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 38
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 17

   37 simple_exp: "(" • exp ")"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 39
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 18

   43 blockexp: "{" • stmtlist ";" exp "}"
   44         | "{" • exp "}"
   45         | "{" • stmtlist "}"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    $default  reduce using rule 18 (stmtlist)

    stmt        go to state 41
    ifstmt      go to state 26
    stmtlist    go to state 42
    exp         go to state 43
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 44
    expif       go to state 31
    idexp       go to state 32


State 19

   46 forexpr: "for" • "(" binding ";" exp ";" exp ")" exp
   47        | "for" • "(" exp ";" exp ";" exp ")" exp

    "("  shift, and go to state 45


State 20

   27 simple_exp: "++" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 46
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 21

   16 ifstmt: "if" • "(" exp ")" exp
   17       | "if" • "(" exp ")" exp "else" exp

    "("  shift, and go to state 47


State 22

   25 simple_exp: "not" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 48
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 23

   21 exp: "id" • "=" exp
   22    | "id" • "[" exp "]" "=" exp
   50 idexp: "id" •
   51      | "id" • "(" optexp ")"
   52      | "id" • "[" exp "]"

    "("  shift, and go to state 49
    "="  shift, and go to state 50
    "["  shift, and go to state 51

    $default  reduce using rule 50 (idexp)


State 24

   38 simple_exp: "number" •

    $default  reduce using rule 38 (simple_exp)


State 25

   39 simple_exp: "integer" •

    $default  reduce using rule 39 (simple_exp)


State 26

   42 simple_exp: ifstmt •

    $default  reduce using rule 42 (simple_exp)


State 27

    9 definition: "def" proto exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    $default  reduce using rule 9 (definition)


State 28

   23 exp: simple_exp •
   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"    shift, and go to state 53
    "+"    shift, and go to state 54
    "*"    shift, and go to state 55
    "/"    shift, and go to state 56
    "<"    shift, and go to state 57
    "=="   shift, and go to state 58
    "or"   shift, and go to state 59
    "and"  shift, and go to state 60

    "-"       [reduce using rule 23 (exp)]
    "+"       [reduce using rule 23 (exp)]
    "*"       [reduce using rule 23 (exp)]
    "/"       [reduce using rule 23 (exp)]
    "<"       [reduce using rule 23 (exp)]
    "=="      [reduce using rule 23 (exp)]
    "or"      [reduce using rule 23 (exp)]
    "and"     [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 29

   40 simple_exp: blockexp •

    $default  reduce using rule 40 (simple_exp)


State 30

   41 simple_exp: forexpr •

    $default  reduce using rule 41 (simple_exp)


State 31

   24 exp: expif •

    $default  reduce using rule 24 (exp)


State 32

   36 simple_exp: idexp •

    $default  reduce using rule 36 (simple_exp)


State 33

    8 top: "global" "id" "[" • "integer" "]"

    "integer"  shift, and go to state 61


State 34

    3 program: top ";" program •

    $default  reduce using rule 3 (program)


State 35

   13 idseq: "id" • idseq

    "id"  shift, and go to state 35

    $default  reduce using rule 12 (idseq)

    idseq  go to state 62


State 36

   11 proto: "id" "(" idseq • ")"

    ")"  shift, and go to state 63


State 37

   50 idexp: "id" •
   51      | "id" • "(" optexp ")"
   52      | "id" • "[" exp "]"

    "("  shift, and go to state 49
    "["  shift, and go to state 64

    $default  reduce using rule 50 (idexp)


State 38

   26 simple_exp: "-" simple_exp •
   28           | simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 53
    "+"   shift, and go to state 54
    "*"   shift, and go to state 55
    "/"   shift, and go to state 56
    "<"   shift, and go to state 57
    "=="  shift, and go to state 58

    $default  reduce using rule 26 (simple_exp)


State 39

   37 simple_exp: "(" exp • ")"
   49 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 65
    "?"  shift, and go to state 52


State 40

   48 binding: "var" • "id" "=" exp

    "id"  shift, and go to state 66


State 41

   19 stmtlist: stmt •

    $default  reduce using rule 19 (stmtlist)


State 42

   20 stmtlist: stmtlist • ";" stmt
   43 blockexp: "{" stmtlist • ";" exp "}"
   45         | "{" stmtlist • "}"

    ";"  shift, and go to state 67
    "}"  shift, and go to state 68


State 43

   15 stmt: exp •
   44 blockexp: "{" exp • "}"
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52
    "}"  shift, and go to state 69

    "}"       [reduce using rule 15 (stmt)]
    $default  reduce using rule 15 (stmt)


State 44

   14 stmt: binding •

    $default  reduce using rule 14 (stmt)


State 45

   46 forexpr: "for" "(" • binding ";" exp ";" exp ")" exp
   47        | "for" "(" • exp ";" exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 70
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 71
    expif       go to state 31
    idexp       go to state 32


State 46

   27 simple_exp: "++" simple_exp •
   28           | simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 53
    "+"   shift, and go to state 54
    "*"   shift, and go to state 55
    "/"   shift, and go to state 56
    "<"   shift, and go to state 57
    "=="  shift, and go to state 58

    $default  reduce using rule 27 (simple_exp)


State 47

   16 ifstmt: "if" "(" • exp ")" exp
   17       | "if" "(" • exp ")" exp "else" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 72
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 48

   25 simple_exp: "not" simple_exp •
   28           | simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 53
    "+"   shift, and go to state 54
    "*"   shift, and go to state 55
    "/"   shift, and go to state 56
    "<"   shift, and go to state 57
    "=="  shift, and go to state 58

    $default  reduce using rule 25 (simple_exp)


State 49

   51 idexp: "id" "(" • optexp ")"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    $default  reduce using rule 53 (optexp)

    ifstmt      go to state 26
    exp         go to state 73
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32
    optexp      go to state 74
    explist     go to state 75


State 50

   21 exp: "id" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 76
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 51

   22 exp: "id" "[" • exp "]" "=" exp
   52 idexp: "id" "[" • exp "]"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 77
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 52

   49 expif: exp "?" • exp ":" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 78
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 53

   29 simple_exp: simple_exp "-" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 79
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 54

   28 simple_exp: simple_exp "+" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 80
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 55

   30 simple_exp: simple_exp "*" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 81
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 56

   31 simple_exp: simple_exp "/" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 82
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 57

   32 simple_exp: simple_exp "<" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 83
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 58

   33 simple_exp: simple_exp "==" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 84
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 59

   35 simple_exp: simple_exp "or" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 85
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 60

   34 simple_exp: simple_exp "and" • simple_exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 37
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    simple_exp  go to state 86
    blockexp    go to state 29
    forexpr     go to state 30
    idexp       go to state 32


State 61

    8 top: "global" "id" "[" "integer" • "]"

    "]"  shift, and go to state 87


State 62

   13 idseq: "id" idseq •

    $default  reduce using rule 13 (idseq)


State 63

   11 proto: "id" "(" idseq ")" •

    $default  reduce using rule 11 (proto)


State 64

   52 idexp: "id" "[" • exp "]"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 88
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 65

   37 simple_exp: "(" exp ")" •

    $default  reduce using rule 37 (simple_exp)


State 66

   48 binding: "var" "id" • "=" exp

    "="  shift, and go to state 89


State 67

   20 stmtlist: stmtlist ";" • stmt
   43 blockexp: "{" stmtlist ";" • exp "}"

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "var"      shift, and go to state 40
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    stmt        go to state 90
    ifstmt      go to state 26
    exp         go to state 91
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    binding     go to state 44
    expif       go to state 31
    idexp       go to state 32


State 68

   45 blockexp: "{" stmtlist "}" •

    $default  reduce using rule 45 (blockexp)


State 69

   44 blockexp: "{" exp "}" •

    $default  reduce using rule 44 (blockexp)


State 70

   47 forexpr: "for" "(" exp • ";" exp ";" exp ")" exp
   49 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 92
    "?"  shift, and go to state 52


State 71

   46 forexpr: "for" "(" binding • ";" exp ";" exp ")" exp

    ";"  shift, and go to state 93


State 72

   16 ifstmt: "if" "(" exp • ")" exp
   17       | "if" "(" exp • ")" exp "else" exp
   49 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 94
    "?"  shift, and go to state 52


State 73

   49 expif: exp • "?" exp ":" exp
   55 explist: exp •
   56        | exp • "," explist

    ","  shift, and go to state 95
    "?"  shift, and go to state 52

    $default  reduce using rule 55 (explist)


State 74

   51 idexp: "id" "(" optexp • ")"

    ")"  shift, and go to state 96


State 75

   54 optexp: explist •

    $default  reduce using rule 54 (optexp)


State 76

   21 exp: "id" "=" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    $default  reduce using rule 21 (exp)


State 77

   22 exp: "id" "[" exp • "]" "=" exp
   49 expif: exp • "?" exp ":" exp
   52 idexp: "id" "[" exp • "]"

    "?"  shift, and go to state 52
    "]"  shift, and go to state 97


State 78

   49 expif: exp • "?" exp ":" exp
   49      | exp "?" exp • ":" exp

    "?"  shift, and go to state 52
    ":"  shift, and go to state 98


State 79

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   29           | simple_exp "-" simple_exp •
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "*"  shift, and go to state 55
    "/"  shift, and go to state 56

    $default  reduce using rule 29 (simple_exp)


State 80

   28 simple_exp: simple_exp • "+" simple_exp
   28           | simple_exp "+" simple_exp •
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "*"  shift, and go to state 55
    "/"  shift, and go to state 56

    $default  reduce using rule 28 (simple_exp)


State 81

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   30           | simple_exp "*" simple_exp •
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    $default  reduce using rule 30 (simple_exp)


State 82

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   31           | simple_exp "/" simple_exp •
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    $default  reduce using rule 31 (simple_exp)


State 83

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   32           | simple_exp "<" simple_exp •
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"  shift, and go to state 53
    "+"  shift, and go to state 54
    "*"  shift, and go to state 55
    "/"  shift, and go to state 56

    $default  reduce using rule 32 (simple_exp)


State 84

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   33           | simple_exp "==" simple_exp •
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp

    "-"  shift, and go to state 53
    "+"  shift, and go to state 54
    "*"  shift, and go to state 55
    "/"  shift, and go to state 56

    $default  reduce using rule 33 (simple_exp)


State 85

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   35           | simple_exp • "or" simple_exp
   35           | simple_exp "or" simple_exp •

    "-"    shift, and go to state 53
    "+"    shift, and go to state 54
    "*"    shift, and go to state 55
    "/"    shift, and go to state 56
    "<"    shift, and go to state 57
    "=="   shift, and go to state 58
    "and"  shift, and go to state 60

    $default  reduce using rule 35 (simple_exp)


State 86

   28 simple_exp: simple_exp • "+" simple_exp
   29           | simple_exp • "-" simple_exp
   30           | simple_exp • "*" simple_exp
   31           | simple_exp • "/" simple_exp
   32           | simple_exp • "<" simple_exp
   33           | simple_exp • "==" simple_exp
   34           | simple_exp • "and" simple_exp
   34           | simple_exp "and" simple_exp •
   35           | simple_exp • "or" simple_exp

    "-"   shift, and go to state 53
    "+"   shift, and go to state 54
    "*"   shift, and go to state 55
    "/"   shift, and go to state 56
    "<"   shift, and go to state 57
    "=="  shift, and go to state 58

    $default  reduce using rule 34 (simple_exp)


State 87

    8 top: "global" "id" "[" "integer" "]" •

    $default  reduce using rule 8 (top)


State 88

   49 expif: exp • "?" exp ":" exp
   52 idexp: "id" "[" exp • "]"

    "?"  shift, and go to state 52
    "]"  shift, and go to state 99


State 89

   48 binding: "var" "id" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 100
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 90

   20 stmtlist: stmtlist ";" stmt •

    $default  reduce using rule 20 (stmtlist)


State 91

   15 stmt: exp •
   43 blockexp: "{" stmtlist ";" exp • "}"
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52
    "}"  shift, and go to state 101

    "}"       [reduce using rule 15 (stmt)]
    $default  reduce using rule 15 (stmt)


State 92

   47 forexpr: "for" "(" exp ";" • exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 102
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 93

   46 forexpr: "for" "(" binding ";" • exp ";" exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 103
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 94

   16 ifstmt: "if" "(" exp ")" • exp
   17       | "if" "(" exp ")" • exp "else" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 104
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 95

   56 explist: exp "," • explist

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 73
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32
    explist     go to state 105


State 96

   51 idexp: "id" "(" optexp ")" •

    $default  reduce using rule 51 (idexp)


State 97

   22 exp: "id" "[" exp "]" • "=" exp
   52 idexp: "id" "[" exp "]" •

    "="  shift, and go to state 106

    $default  reduce using rule 52 (idexp)


State 98

   49 expif: exp "?" exp ":" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 107
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 99

   52 idexp: "id" "[" exp "]" •

    $default  reduce using rule 52 (idexp)


State 100

   48 binding: "var" "id" "=" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    $default  reduce using rule 48 (binding)


State 101

   43 blockexp: "{" stmtlist ";" exp "}" •

    $default  reduce using rule 43 (blockexp)


State 102

   47 forexpr: "for" "(" exp ";" exp • ";" exp ")" exp
   49 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 108
    "?"  shift, and go to state 52


State 103

   46 forexpr: "for" "(" binding ";" exp • ";" exp ")" exp
   49 expif: exp • "?" exp ":" exp

    ";"  shift, and go to state 109
    "?"  shift, and go to state 52


State 104

   16 ifstmt: "if" "(" exp ")" exp •
   17       | "if" "(" exp ")" exp • "else" exp
   49 expif: exp • "?" exp ":" exp

    "?"     shift, and go to state 52
    "else"  shift, and go to state 110

    "?"       [reduce using rule 16 (ifstmt)]
    "else"    [reduce using rule 16 (ifstmt)]
    $default  reduce using rule 16 (ifstmt)


State 105

   56 explist: exp "," explist •

    $default  reduce using rule 56 (explist)


State 106

   22 exp: "id" "[" exp "]" "=" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 111
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 107

   49 expif: exp • "?" exp ":" exp
   49      | exp "?" exp ":" exp •

    "?"  shift, and go to state 52

    $default  reduce using rule 49 (expif)


State 108

   47 forexpr: "for" "(" exp ";" exp ";" • exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 112
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 109

   46 forexpr: "for" "(" binding ";" exp ";" • exp ")" exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 113
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 110

   17 ifstmt: "if" "(" exp ")" exp "else" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 114
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 111

   22 exp: "id" "[" exp "]" "=" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    $default  reduce using rule 22 (exp)


State 112

   47 forexpr: "for" "(" exp ";" exp ";" exp • ")" exp
   49 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 115
    "?"  shift, and go to state 52


State 113

   46 forexpr: "for" "(" binding ";" exp ";" exp • ")" exp
   49 expif: exp • "?" exp ":" exp

    ")"  shift, and go to state 116
    "?"  shift, and go to state 52


State 114

   17 ifstmt: "if" "(" exp ")" exp "else" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    "?"       [reduce using rule 17 (ifstmt)]
    $default  reduce using rule 17 (ifstmt)


State 115

   47 forexpr: "for" "(" exp ";" exp ";" exp ")" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 117
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 116

   46 forexpr: "for" "(" binding ";" exp ";" exp ")" • exp

    "-"        shift, and go to state 16
    "("        shift, and go to state 17
    "{"        shift, and go to state 18
    "for"      shift, and go to state 19
    "++"       shift, and go to state 20
    "if"       shift, and go to state 21
    "not"      shift, and go to state 22
    "id"       shift, and go to state 23
    "number"   shift, and go to state 24
    "integer"  shift, and go to state 25

    ifstmt      go to state 26
    exp         go to state 118
    simple_exp  go to state 28
    blockexp    go to state 29
    forexpr     go to state 30
    expif       go to state 31
    idexp       go to state 32


State 117

   47 forexpr: "for" "(" exp ";" exp ";" exp ")" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    "?"       [reduce using rule 47 (forexpr)]
    $default  reduce using rule 47 (forexpr)


State 118

   46 forexpr: "for" "(" binding ";" exp ";" exp ")" exp •
   49 expif: exp • "?" exp ":" exp

    "?"  shift, and go to state 52

    "?"       [reduce using rule 46 (forexpr)]
    $default  reduce using rule 46 (forexpr)
